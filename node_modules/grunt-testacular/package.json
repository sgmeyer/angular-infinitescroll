{
  "name": "grunt-testacular",
  "version": "0.3.0",
  "description": "A grunt wrapper for running tests with testacular.",
  "author": {
    "name": "Friedel Ziegelmayer",
    "email": "dignifiedquire@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:Dignifiedquire/grunt-testacular.git"
  },
  "bugs": {
    "url": "https://github.com/dignifiedquire/grunt-testacular/issues"
  },
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "dependencies": {
    "testacular": "~0.5.10"
  },
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-jshint": "~0.1.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "grunt",
    "Testacular",
    "nodejs",
    "js",
    "javascript",
    "testing",
    "test",
    "remote",
    "execution"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/Dignifiedquire/grunt-testacular/blob/master/LICENSE-MIT"
    }
  ],
  "contributors": [
    {
      "name": "ca77y",
      "email": "ca77y@live.com"
    }
  ],
  "readme": "# grunt-testacular\n\nA wrapper for [grunt](http://gruntjs.com) around\n[testacular](http://vojtajina.github.com/testacular/) that lets you \nrun multiple instances of testacular. \n\n> As of v 0.3.0 `testacularServer` is now called `testacular`.\n\n## Installation\n\nFirst you need to install this plugin in your project\n\n```bash\n$ npm install grunt-testacular\n```\n\nthen load the tasks in your Gruntfile with\n\n```javascript\ngrunt.loadNpmTasks('grunt-testacular');\n```\nAnd now you can run\n```bash\n$ grunt testacular\n```\nto start up the server.\n\n## Usage\nThere are two tasks provided `testacular` and `testacularRun`. \n\n### `testacularServer`\nThis task is the equivalent of `testacular start <options>\n<configFile>`. You can use it to do single runs or to `autoWatch`\nfiles and directories. To use it you need to at least specify a\n`configFile`. All other options can be defined in the `configFile` but\nyou can also override some of these.\n\n**simple example**\n\n```javascript\ntestacular: {\n  unit: {\n    options: {\n      configFile: 'config/testacular.conf.js'\n    }\n  }\n}\n```\n\n**advanced example**\n\n```javascript\ntestacular: {\n  unit: {\n    options: {\n      configFile: 'config/testacular.conf.js',\n      autoWatch: true,\n      browsers: [ 'Chrome', 'PhantomJS' ],\n      reporters: [ 'dots' ],\n      runnerPort: 9101\n    }\n  }\n}\n```\nAnd if you want to keep the server running.\n```javascript\ntestacular: {\n  unit: {\n    options: {\n      configFile: 'config/testacular.conf.js',\n      keepalive: true\n    }\n  }\n}\n```\n\n### `testacularRun`\nThis task is the equivalent of running `testacular run <options>`.\nThere is only one option available, that is `runnerPort` that defines\nthe port where the server is listening.\n\n```javascript\ntestacularRun: {\n  unit: {\n    options: {\n      runnerPort: 9101\n    }\n  }\n}\n```\n\n## Release History\n* v0.3.0 - Complete Rewrite\n* v0.2.2 - Add ability to use grunt templates.\n* v0.2.1 - Make Grunt 0.4.0a compatible.\n* v0.2.0 - Added `keepalive` option.\n* v0.1.0 - First release on npm.\n\n",
  "readmeFilename": "README.md",
  "_id": "grunt-testacular@0.3.0",
  "dist": {
    "shasum": "a4a0934b54511826116b6e74095eb9cfcb6ad987"
  },
  "_from": "grunt-testacular@~0.3.0",
  "_resolved": "https://registry.npmjs.org/grunt-testacular/-/grunt-testacular-0.3.0.tgz"
}
